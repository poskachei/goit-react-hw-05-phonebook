{"version":3,"sources":["components/Form/Alert.module.css","components/List/list.module.css","components/Form/transition/alert.module.css","components/Form/Form.js","components/List/List.js","components/Filter/Filter.js","components/Form/Alert.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","className","onSubmit","htmlFor","id","type","onChange","required","Component","ContactList","contacts","onRemove","TransitionGroup","component","map","contact","CSSTransition","key","classNames","contactsList","timeout","unmountOnExit","onClick","PropsTypes","node","string","isRequired","func","Filter","onChangeFilter","Alert","text","style","container","App","filter","notification","addContact","find","uuidv4","prevState","isAlready","removeContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","in","appear","eventShow","redAlert","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff48e5a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Alert_container__1pXaK\",\"text\":\"Alert_text__1Vt0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"list_enter__SS27T\",\"enterActive\":\"list_enterActive__QN2Hg\",\"exit\":\"list_exit__1BUcR\",\"exitActive\":\"list_exitActive__2Zd2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__24Vb2\",\"enterActive\":\"alert_enterActive__3Z-ih\",\"exit\":\"alert_exit__2MbKy\",\"exitActive\":\"alert_exitActive__1cziR\"};","import React, { Component } from \"react\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className=\"contact-form\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"name\"> Name </label>\r\n        <input\r\n          value={name}\r\n          name=\"name\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <label htmlFor=\"number\"> Number </label>\r\n        <input\r\n          value={number}\r\n          name=\"number\"\r\n          id=\"number\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\"> Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nimport contactsList from \"./list.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map((contact) => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          classNames={contactsList}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <li className=\"contacts-item\">\r\n            {contact.name} : {contact.number}\r\n            <button onClick={() => onRemove(contact.id)}> X </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.PropsTypes = {\r\n  contacts: (PropsTypes.node = {\r\n    id: PropsTypes.string,\r\n    name: PropsTypes.string.isRequired,\r\n    number: PropsTypes.string.isRequired,\r\n  }),\r\n  onRemove: PropsTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <label htmlFor=\"filter\">Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport style from \"./Alert.module.css\";\r\n\r\nconst Alert = ({ text }) => {\r\n  return (\r\n    <div className={style.container}>\r\n      <span className={style.text}> {text} </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport ContactForm from \"./components/Form/Form\";\r\nimport ContactList from \"./components/List/List\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport MessageRed from \"./components/Form/Alert\";\r\n\r\nimport redAlert from \"./components/Form/transition/alert.module.css\";\r\nimport \"./components/Form/heading.css\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n    notification: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n\r\n    if (persistedContacts) {\r\n      this.setState({ contacts: JSON.parse(persistedContacts) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  //добавляем новый контакт, имя и номер возьмем из state ContactForm, id генерим тут\r\n  addContact = ({ name, number }) => {\r\n    const statement = this.state.contacts.find(\r\n      (contact) => contact.name === name\r\n    );\r\n\r\n    if (statement) {\r\n      return this.setState({ notification: true });\r\n    }\r\n\r\n    if (name && number) {\r\n      const contact = {\r\n        id: uuidv4(),\r\n        name: name,\r\n        number: number,\r\n      };\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  isAlready = () => {\r\n    this.setState({ notification: false });\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div className=\"pnohebook-container\">\r\n        <CSSTransition\r\n          in={true}\r\n          timeout={500}\r\n          appear={true}\r\n          classNames=\"title\"\r\n          unmountOnExit\r\n        >\r\n          <h1> Phonebook </h1>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={this.props.eventShow}\r\n          timeout={250}\r\n          classNames={redAlert}\r\n          unmountOnExit\r\n        >\r\n          <MessageRed text=\"Contact is already\" />\r\n        </CSSTransition>\r\n\r\n        <ContactForm onAddContact={this.addContact} />\r\n        {<Filter onChangeFilter={this.changeFilter} value={filter} />}\r\n        {visibleContacts.length > 0 && (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onRemove={this.removeContact}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}